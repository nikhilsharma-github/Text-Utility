{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["About","presentTheme","color","backgroundColor","borderRadius","borderTop","className","style","id","type","Navbar","props","mode","to","title","onClick","toggleMode","cursor","htmlFor","TextForm","useState","text","setText","WRC","length","toFixed","heading","onChange","event","console","log","target","value","rows","placeholder","disabled","newText","toUpperCase","showAlert","toLowerCase","replace","s","document","querySelector","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alerts","height","alert","msg","role","word","lower","charAt","slice","capitalize","defaultProps","body","App","Mode","setMode","setAlert","message","setTimeout","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc426399.chunk.js","sourcesContent":["import React from \"react\";\r\n// import React, { useState } from \"react\";\r\n\r\n// Enable dark mode code\r\n\r\nexport default function About() {\r\n  // const [presentTheme, newTheme] = useState({\r\n  //   color: \"#FFEBA1\",\r\n  //   backgroundColor: \"#071C21\",\r\n  //   borderRadius: \"1rem\",\r\n  //   borderTop:\"1px solid white\",\r\n  // });\r\n   \r\n\r\n  const presentTheme={\r\n    color: \"#FFEBA1\",\r\n    backgroundColor: \"#071C21\",\r\n    borderRadius: \"1rem\",\r\n    borderTop:\"1px solid white\"\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container aboutAccordionSizing\" style={presentTheme}>\r\n      <h1 className=\"my-2\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item  \" style={presentTheme}>\r\n          <h2 className=\"accordion-header \" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button aboutAccordion\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              // aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Analyze Your Text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            \r\n            <div className=\"accordion-body\">\r\n              Simply add your text into the textbox and start manipulating it as\r\n              you want <br />\r\n              No hassle of visiting various websites for a multiple tool. <br />\r\n              Now, Stick to it and Enjoy the tools of it.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={presentTheme}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed aboutAccordion\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong>Free To Use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              No charge for these services, its totally free and use it whenever\r\n              you want\r\n              <br /> Lifetime free support and updates on this tool, Feel free\r\n              to Use.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={presentTheme}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed aboutAccordion\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              Use in any Browser, of Any operating System, whichever you want to\r\n              use.\r\n              <br /> Supports{\" \"}\r\n              <i>\r\n                {\" \"}\r\n                Google Chrome, Mozilla FireFox, Microsoft Edge, Apple Safari,\r\n                Brave, DuckDuckGo, Opera, etc.\r\n              </i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\"; //Importing react\r\nimport PropTypes from \"prop-types\"; //Importing Proptypes for using propType and defaultProp defining at the end\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      id=\"navID\"\r\n      className={`navbar navbar-expand-sm \r\n    \r\n    ${props.mode === \"light\" ? \"lightNavTheme \" : \"darkNavTheme\"} `}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link\r\n          className={`navbar-brand   ${\r\n            props.mode === \"light\" ? \"lightNavTextColor \" : \"darkNavTextColor\"\r\n          } `}\r\n          to=\"/\"\r\n        >\r\n          <span className=\"logoSize logo-text\">{props.title} </span>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler togglerDesign\"\r\n          // className={`    ${props.mode === \"light\" ? \"lightNavTextColor \" : \"darkNavTextColor\" }`}\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"toggleIcon navbar-toggler-icon\">TU</span>\r\n        </button>\r\n        \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className={`nav-link active  ${\r\n                  props.mode === \"light\"\r\n                    ? \"lightNavTextColor \"\r\n                    : \"darkNavTextColor\"\r\n                } `}\r\n                aria-current=\"page\"\r\n                to=\"/\"\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className={`nav-link   ${\r\n                  props.mode === \"light\"\r\n                    ? \"lightNavTextColor \"\r\n                    : \"darkNavTextColor\"\r\n                } `}\r\n                to=\"/about\"\r\n              >\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n            onClick={props.toggleMode}\r\n            id=\"darkModeButton\"\r\n          >\r\n            <div className=\"\">\r\n              <input\r\n                className=\"form-check-input btn-lg\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                style={{cursor:'pointer'}}\r\n                  \r\n              />\r\n              <label\r\n                className={`form-check-label  ${\r\n                  props.mode === \"light\"\r\n                    ? \"lightNavTextColor \"\r\n                    : \"darkNavTextColor\"\r\n                } `}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n                type=\"checkbox\"\r\n              >\r\n                {/* <p> Enable {props.mode === \"light\" ? \"dark\" : \"light\"} Mode </p> */}\r\n                Enable {props.mode === \"light\" ? \"dark\" : \"light\"} Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n//PropTypes- Used for defining the datatypes of our prop used in our react component\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\"; //Importing react and useState.\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  // setText(\"New TextBox value\");s\r\n  // let WRC = 0.008 * 60 * text.split(\" \").length * 0.6;\r\n  let WRC = (text.length / 5 / 40) * 60;\r\n\r\n  WRC = WRC.toFixed(0);\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase button was clicked\");\r\n    // setText(\"You have clicked on uppercase button\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To UPPER CASE\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n\r\n    props.showAlert(\"Converted To lower case\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\"UpperCase button was clicked\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleTextClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared the Text\", \"success\");\r\n  };\r\n  const handleTitleText = () => {\r\n    let newText = text.toLowerCase().replace(/\\b(\\w)/g, (s) => s.toUpperCase());\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Title Case\", \"success\");\r\n  };\r\n\r\n  const handleTextCopy = () => {\r\n    var text = document.querySelector(\"#myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n\r\n    props.showAlert(\"Copied Text To ClipBoard\", \"success\");\r\n  };\r\n\r\n  const handleRemoveExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed Extra Spaces From Text\", \"success\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"textform-sizing\">\r\n      <div className=\"container \">\r\n        <h1 className=\"textForm-titles \">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            onChange={handleOnChange}\r\n            className=\"form-control textBox-text\"\r\n            value={text}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{ backgroundColor: \"#C7FFD8\" }}\r\n            placeholder=\"First Enter your Text Here to Enable Tools\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"buttonBackground\">\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-success mx-1 my-1  buttonBorder \"\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert To UPPER CASE\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-success mx-1 my-1  buttonBorder\"\r\n            onClick={handleLowClick}\r\n          >\r\n            Convert To lower case\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-success  mx-1 my-1 buttonBorder\"\r\n            onClick={handleTitleText}\r\n          >\r\n            Convert To Title Case\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-outline-danger m-2 buttonBorder\"\r\n            onClick={handleTextClear}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-outline-warning mx-1 my-1 buttonBorder\"\r\n            onClick={handleTextCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-outline-secondary mx-1 my-1 buttonBorder\"\r\n            onClick={handleRemoveExtraSpace}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"textSummary\">\r\n          <h1 >Your Text Summary</h1>\r\n          <p>\r\n            {text.length} Characters and{\" \"}\r\n            {\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }{\" \"}\r\n            Words\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            On Average, {WRC} Seconds will be taken to Type this text At 40 WPM\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"previewDark\">\r\n          <h2 className=\"previewSize\">Preview</h2>\r\n          <p>\r\n            {text.length > 0\r\n              ? text\r\n              : \"Nothing to Preview, First Enter the text above to preview it. \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// PropType\r\nTextForm.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\n//Default Prop\r\nTextForm.defaultProps = {\r\n  title: \"Enter your text to Analyze\",\r\n};\r\n","import React from \"react\";\r\n\r\n// // import { ToastContainer, toast } from 'react-toastify';\r\n// // import 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nexport default function Alerts(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div  style={{ height: \"70px\" }}>\r\n      {props.alert && (\r\n        <div id=\"alertBox\"\r\n          className={`alert alert-${props.alert.type} ${props.alert.msg===\"Hide\"?\"alertHide\":\"alertShow\"}`}\r\n          role=\"alert\"\r\n        >\r\n          {capitalize(props.alert.type)}: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\ndocument.body.style.backgroundColor = \"#071C21\";\ndocument.body.style.color = \"#FFEBA1\";\n\n\n\nfunction App() {\n  const [Mode, setMode] = useState(\"dark\");\n\n  const [alert, setAlert] = useState({\n    msg: \"Hide\",\n    type: \"\",\n  });\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#071C21\";\n      document.body.style.color = \"#FFEBA1\";\n      document.querySelector(\"nav\").style.color = \"green\";\n      showAlert(\"Dark Mode Has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#75c3d8\";\n      document.body.style.color = \"#060930\";\n      showAlert(\"Light Mode Has been Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar title=\"Text Utility\" mode={Mode} toggleMode={toggleMode}></Navbar>\n      <Alerts alert={alert}></Alerts>\n\n      <div className=\"container mr-4\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={Mode}></About>\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm\n              heading=\"Text Utility - Manipulate your text easily\"\n              showAlert={showAlert}\n            ></TextForm>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n//Exporting this app file for other Component files by React\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}